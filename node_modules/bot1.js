/**
 * 
 */
const Discord = require('discord.js')
const client = new Discord.Client()

var lastSentMsg;
var person = {UID:"125805688797659138", ttv: "bloxipus", mopgg: "bloxipus", aopgg: ["Bloxipus","nickeone","Kendra Chan"]};
//List of Commands Avalible
const helpCommands = ["help"];
const opggCommands = ["opgg","op.gg"];
const allOpggCommands = ["aopgg", "a.op.gg"];
const championCommands = ["champ", "ch"];
const tianSquareCommands = ["tsquare", "tiansquare"];
const cancerCommands = ["cancer", "can"];
const caesarRodneyCommands = ["cr", "caesar", "cesar"];
const pencaderCommands = ["pencader", "pen"];
const pogPlantImageCommands = ["pogplant", "pp"];
const magic8BallCommands = ["8", "magic", "8ball", "magic8ball", "m8"];
const emptyCommands = [""];

const allCommands = [helpCommands, opggCommands, allOpggCommands, championCommands, 
					 tianSquareCommands, cancerCommands, caesarRodneyCommands, pencaderCommands,
					 pogPlantImageCommands, magic8BallCommands, emptyCommands];

//*****************************************************************************************************************************
client.on('ready', ()=> {
	client.user.setActivity("PogPlantBot V.2 Test")
	listAllConnectedServersAndChannels()
    console.log("PogPlant Started")
})

client.on('message', (receivedMessage) =>{
	if(receivedMessage.author == client.user){
		return
	}
	if(checkIfExclamationPointExpression(receivedMessage) || checkIfSingleExclamationPoint(receivedMessage)){
		return
	}
	else if(receivedMessage.content.startsWith("!")) { //!command
        processCommand(receivedMessage)
    }
	if(receivedMessage.content.includes(client.user.toString())) { //if tagged
		
	}
})

function listAllConnectedServersAndChannels(){
	console.log("Servers:")
    client.guilds.forEach((guild) => {
        console.log(" - " + guild.name)
        guild.channels.forEach((channel) => {
            console.log(` -- ${channel.name} (${channel.type}) - ${channel.id}`)
        })
    })
}
//this doesnt work
function checkIfSingleExclamationPoint(receivedMessage){
	let fullCommand = receivedMessage.content;
	let splitCommand = fullCommand.split(" ");
	let primaryCommand = findCommand(splitCommand[0]);
	if(primaryCommand === ""){
		return true
	}
	else{
		return false
	}
}

function checkIfExclamationPointExpression(receivedMessage){
	let fullCommand = receivedMessage.content;
	var numOfExclamationPoints = 0;
	var numOfSpaces = 0;
	var numOfOtherCharacters
	for(var i = 0; i < fullCommand.length; i++){
		if(fullCommand.charAt(i) == '!'){
			numOfExclamationPoints += 1
		}
		if(fullCommand.charAt(i) == ' '){
			numOfSpaces += 1
		}
		else{
			numOfOtherCharacters += 1
		}
	}
	if(numOfExclamationPoints >= 2 ){
		return true
	}
	else{
		return false
	}
}

function testCommand(arguments, receivedMessage){
	//random dogs
	/*
	const embed = new Discord.RichEmbed()
		.setColor(0x000000)
		.setAuthor("Magic Pog-Ball", "https://i.imgur.com/HAve7tX.png")
		.setThumbnail("https://i.imgur.com/HAve7tX.png")
		//.addBlankField(true)
		.setDescription("```Hello```");
	receivedMessage.channel.send({embed});
	*/
	//var testvar = 'https://dog.ceo/api/breeds/image/random';
	//console.log(loadJSON(testvar))
	/*
	receivedMessage.channel.send(person.UID)
	receivedMessage.channel.send(person.ttv)
	receivedMessage.channel.send(person.mopgg)
	receivedMessage.channel.send(person.aopgg)
	*/
	addMyUser()
	/*
	receivedMessage.channel.send(myUserList[0].UID)
	receivedMessage.channel.send(myUserList[0].ttv)
	receivedMessage.channel.send(myUserList[0].mopgg)
	receivedMessage.channel.send(myUserList[0].aopgg)
	*/
	clearTextFile()
	writeMyUserListToTextFile()
}
//*****************************************************************************************************************************
//Building myUser
function myUser(UID2, ttv2, mopgg2, aopgg2){
	this.UID = UID2;
	this.ttv = ttv2;
	this.mopgg = mopgg2;
	this.aopgg = aopgg2;
}
var myUserList = [];

function addMyUser(){
	var myUser1 = new myUser("125805688797659138","bloxipus","bloxipus",["Bloxipus","nickeone","Kendra Chan"]);
	myUserList.push(myUser1)
}

function writeMyUserListToTextFile(){
	var fs = require('fs');
	var data;
	for(var i = 0; i < myUserList.length - 1; i++){
		data += myUserList[i].UID + "," + myUserList[i].ttv + "," + myUserList[i].mopgg + "," + myUserList[i].aopgg + "\n"
	}
	fs.writeFile('myUsers.txt', data, function(){console.log('done')})
}

function clearTextFile(){
	var fs = require('fs');
	fs.writeFile('myUsers.txt', '', function(){console.log('done')})
}
//*****************************************************************************************************************************
function processCommand(receivedMessage) {
    let fullCommand = receivedMessage.content.substr(1) // Remove the leading exclamation mark
    let splitCommand = fullCommand.split(" ") // Split the message up in to pieces for each space
    //*******************************************************************************************
    let primaryCommand = findCommand(splitCommand[0].toLowerCase()) // The first word directly after the exclamation is the command
    let arguments = splitCommand.slice(1) // All other words are arguments/parameters/options for the command
    //if(checkIfExclamationPointExpression(arguments, receivedMessage)){
    //	return
    //}
    if(splitCommand[0].toLowerCase() == "test"){
    	testCommand(arguments, receivedMessage)
    }
    else{
    switch(primaryCommand){
    case "Invalid_Command":
    	invalidCommand(arguments, receivedMessage)
    	break;
    case "help":
    	helpCommand(arguments, receivedMessage)
    	break;
    case "opgg":
    	opggCommand(arguments, receivedMessage)
    	break;
    case "aopgg":
    	allOpggCommand(arguments, receivedMessage)
    	break;
    case "champ":
    	champggCommand(arguments, receivedMessage)
    	break;
    case "tsquare":
    	tianSquareCommand(arguments, receivedMessage)
    	break;
    case "cancer":
    	cancerfyChatCommand(arguments, receivedMessage)
    	break;
    case "cr":
    	caeserRodneyCommand(arguments, receivedMessage)
    	break;
    case "pencader":
    	pencaderCommand(arguments, receivedMessage)
    	break;
    case "pogplant":
    	pogPlantImageCommand(arguments, receivedMessage)
    	break;
    case "8":
    	magic8BallCommand(arguments, receivedMessage)
    	break;
    case "":
    	break;
    }
    }
}

function findCommand(primaryCommand){
	
	for(var listNum = 0; listNum < allCommands.length; listNum++){
	//List of Commands
		for(var commandNum = 0; commandNum < allCommands[listNum].length; commandNum++){
		//Command in List
			if(primaryCommand == allCommands[listNum][commandNum]){
				return allCommands[listNum][0]
			}
		}
	}
	return "Invalid_Command"
}

//command functions
function invalidCommand(arguments, receivedMessage){
	receivedMessage.channel.send("Invalid Command, try typing \"!help\" for the list of commands")
}

function helpCommand(arguments, receivedMessage){
	var returnMsg = "```";
	allCommands.forEach((commandList) =>{
		if (commandList[0] != ""){
			returnMsg += "!" + commandList[0] + ", "
		}	
	})
	returnMsg = returnMsg.substring(0, returnMsg.length - 2)
	returnMsg += "```"
	receivedMessage.author.send(returnMsg)
}

function opggCommand(arguments, receivedMessage){
	if(arguments.length > 1){
		var msg = "https://na.op.gg/multi/query=";
		arguments.forEach((value) =>{
			if(value == "brad"){
				msg = msg + "braddddddd" + "%2C"
			}
			else{
				msg = msg + value + "%2C"
			}
		})
		msg = msg.substring(0, msg.length - 3)
		receivedMessage.channel.send(msg)
	}
	else{
		if(arguments[0] == "brad"){
			receivedMessage.channel.send("https://na.op.gg/summoner/userName=braddddddd")
		}
		else{
			receivedMessage.channel.send("https://na.op.gg/summoner/userName=" + arguments[0])
		}
	}
}

function allOpggCommand(arguments, receivedMessage){
	var name = arguments[0]
	if(name == "Herson" || name == "Joe" || name == "Joseph" || name == "joe" || name == "herson" || name == "joseph"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=herson%2Cscaredypoop")
	}
	else if(name == "flexq"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=lifeingrey%2Cnightstealth%2CSixer%2Cbloxipus%2Cmire")
	}
	else if(name == "mic" || name == "mike" || name == "Mic" || name == "midget" || name == "Mike"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=eastcoastcarry%2Cicansavethem%2Ctokyotraphouse%2Cdemonsxd")
	}
	else{
		receivedMessage.channel.send("Invalid Input")
	}
}

function champggCommand(arguments, receivedMessage){
	var championName = arguments[0];
	var role = arguments[1];
	if(arguments.length == 1){
		receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics")
	}
	else if(role == "top"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/top")
		}
		else if(role == "jg" || role == "jungle" || role == "jung"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/jungle")
		}
		else if(role == "mid" || role == "middle"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/mid")
		}
		else if(role == "adc" || role == "ad" || role == "bot" || role == "bottom"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/bot")
		}
		else if(role == "supp" || role == "sup" || role == "support"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/support")
		}
		else{
			receivedMessage.channel.send("Incorrect Input: !champ [champion name] [position/role]")
		}
}

function tianSquareCommand(arguments, receivedMessage){
	receivedMessage.channel.send("```动态网自由门 天安門 天安门 法輪功 李洪志 Free Tibet 六四天安門事件 The Tiananmen Square protests of 1989 " +
			"天安門大屠殺 The Tiananmen Square Massacre 反右派鬥爭 The Anti-Rightist Struggle 大躍進政策 The Great Leap Forward " +
			"文化大革命 The Great Proletarian Cultural Revolution 人權 Human Rights 民運 Democratization 自由 Freedom 獨立 Independence " +
			"多黨制 Multi-party system 台灣 臺灣 Taiwan Formosa 中華民國 Republic of China 西藏 土伯特 唐古特 Tibet 達賴喇嘛 Dalai Lama 法輪功 " +
			"Falun Dafa 新疆維吾爾自治區 The Xinjiang Uyghur Autonomous Region 諾貝爾和平獎 Nobel Peace Prize 劉暁波 Liu Xiaobo 民主 言論 " +
			"思想 反共 反革命 抗議 運動 騷亂 暴亂 騷擾 擾亂 抗暴 平反 維權 示威游行 李洪志 法輪大法 大法弟子 強制斷種 強制堕胎 民族淨化 人體實驗 肅清 胡耀邦 趙紫陽 " +
			"魏京生 王丹 還政於民 和平演變 激流中國 北京之春 大紀元時報 九評論共産黨 獨裁 專制 壓制 統一 監視 鎮壓 迫害 侵略 掠奪 破壞 拷問 屠殺 活摘器官 誘拐 買賣" +
			"人口 遊進 走私 毒品 賣淫 春畫 賭博 六合彩 天安門 天安门 法輪功 李洪志 Winnie the Pooh 劉曉波动态网自由门```")
}

function cancerfyChatCommand(arguments, receivedMessage){
	var msg = "";
	arguments.forEach((value) =>{
		msg = msg + value + " "
	})
	msg = msg.substring(0, msg.length - 1)
	var i;
	var returnMsg = "";
	for(i = 0; i < msg.length; i++){
		if(msg.charAt(i) != " "){
			if(Math.floor(Math.random() * 2) == 0){
				returnMsg = returnMsg + msg.charAt(i).toLowerCase();
			}
			else{
				returnMsg = returnMsg + msg.charAt(i).toUpperCase();
			}
				
		}
		else{
			returnMsg = returnMsg + " ";
		}
	}
	returnMsg = returnMsg.substring(0, returnMsg.length)
	receivedMessage.channel.send(returnMsg);
}

function caeserRodneyCommand(arguments, receivedMessage){
	receivedMessage.channel.send("https://udel.campusdish.com/LocationsAndMenus/CaesarRodneyFreshFoodCompany")
}

function pencaderCommand(arguments, receivedMessage){
	receivedMessage.channel.send("https://udel.campusdish.com/LocationsAndMenus/PencaderResidentialDining")
}

function pogPlantImageCommand(arguments, receivedMessage){
	receivedMessage.channel.send(new Discord.Attachment('\images\\pogplant.jpg'))
}

function magic8BallCommand(arguments, receivedMessage){
	const m8ballCommand = Math.floor(Math.random() * 20);
	const m8ballColor = (m8ballCommand % 4);
	const m8ballAnswers = ["It is certain.", "As I see it, yes.", "Reply hazy, try again.", "Don't count on it.",
						   "It is decidedly so.", "Most likely.", "Ask again later.", "My reply is no.",
						   "Without a doubt.", "Outlook good.", "Better not tell you now.", "My sources say no.",
						   "Yes - definitely.", "Yes.", "Cannot predict now.", "Outlook not so good.",
						   "You may rely on it.", "Signs point to yes.", "Concentrate and ask again.", "Very doubtful."];
	
	let m8ballC = 0x000000;
	switch(m8ballColor){
	case 0:
		m8ballC = 0x6ac06a
		break;
	case 1:
		m8ballC = 0x6ac06a
		break;
	case 2:
		m8ballC = 0xffd740
		break;
	case 3:
		m8ballC = 0xdb423c
		break;
	}
	
	const embed = new Discord.RichEmbed()
		.setColor(m8ballC)
		.setAuthor("Magic Pog-Ball", "https://i.imgur.com/HAve7tX.png")
		.setThumbnail("https://i.imgur.com/HAve7tX.png")
		.setDescription("```" + m8ballAnswers[m8ballCommand] + "```");
	
	receivedMessage.channel.send({embed});
}
client.login("NTY2MzUxMjE1MjgyMzU2MjI0.XLD0NA.SYdI90PjqQI_1rKt1pRK3EOPtL0")