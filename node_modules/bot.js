const Discord = require('discord.js')
const client = new Discord.Client()
let taggedIterator = 0;
client.on('ready', () => {
    // List servers the bot is connected to
	client.user.setActivity("mom boomer simulator")
    console.log("Servers:")
    client.guilds.forEach((guild) => {
        console.log(" - " + guild.name)

        // List all channels
        guild.channels.forEach((channel) => {
            console.log(` -- ${channel.name} (${channel.type}) - ${channel.id}`)
        })
    })
})

client.on('message', (receivedMessage) => {
    if (receivedMessage.author == client.user) { // Prevent bot from responding to its own messages
        return
    }
    
    if (receivedMessage.content.startsWith("!")) {
        processCommand(receivedMessage)
    }
    if (receivedMessage.content.includes(client.user.toString())) {
        
        var returnMsg = ["Hi", "Hello", "Hmm", "Can you stop?", "Stop tagging me", "Stop", "Ok I give up"];
        receivedMessage.channel.send(returnMsg[taggedIterator])
        taggedIterator = taggedIterator + 1
        if(taggedIterator > 6){
        	taggedIterator = 0
        }
    }
})

function processCommand(receivedMessage) {
    let fullCommand = receivedMessage.content.substr(1) // Remove the leading exclamation mark
    let splitCommand = fullCommand.split(" ") // Split the message up in to pieces for each space
    let primaryCommand = splitCommand[0] // The first word directly after the exclamation is the command
    let arguments = splitCommand.slice(1) // All other words are arguments/parameters/options for the command
    
    const pogplantimage = new Discord.Attachment('\images\\pogplant.jpg')
    
    console.log("Command received: " + primaryCommand)
    console.log("Arguments: " + arguments) // There may not be any arguments

    if (primaryCommand == "help") {
        helpCommand(arguments, receivedMessage)
    } 
    else if (primaryCommand == "tiansquare" || primaryCommand == "tiannamensquare"){
    	tianSquareCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "tsquare"){
    	tianSquareCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "chinesetsquare"){
    	chinesetianSquareCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "op.gg" || primaryCommand == "opgg"){
    	opggCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "champ" || primaryCommand == "ch"){
    	champggCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "displayArguments"){
    	displayArgumentsCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "a.op.gg" || primaryCommand == "aopgg"){
    	allOpggCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "cancer"){
    	cancerfyChatCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "pogplant"){
    	receivedMessage.channel.send(pogplantimage)
    }
    else if (primaryCommand == "ttv"){
    	ttvCommand(arguments, receivedMessage)
    }
    else if (primaryCommand == "cr"){
    	receivedMessage.channel.send("https://udel.campusdish.com/LocationsAndMenus/CaesarRodneyFreshFoodCompany")
    }
    else if (primaryCommand == "pencader" || primaryCommand == "pen"){
    	receivedMessage.channel.send("https://udel.campusdish.com/LocationsAndMenus/PencaderResidentialDining")
    }
    else
    {
        receivedMessage.channel.send("I don't understand the command. Try `!help` for the list of commands")
    }
}
function ttvCommand(arguments, receivedMessage){
	let ttvUserName = "";
	let authorID = receivedMessage.author.id;
	let validID = true;
	if(arguments.length != 0){
		ttvUserName = arguments[0]
	}
	else if(authorID == "125805688797659138"){ //bloxipus
		ttvUserName = "bloxipus"
	}
	else if(authorID == "170305354549166081"){ //herson
		ttvUserName = "herson100"
	}
	else if(authorID == "247120904687976450"){ //themajestickiwi
		ttvUserName = "themajkiwi"
	}
	else if(authorID == "173480149520482304"){ //mic
		ttvUserName = "whereismysupport"
	}
	else if(authorID == "200297996213157888"){ //annie
		ttvUserName = "anniekins"
	}
	else if(authorID == "196326698361421834"){ //john
		ttvUserName = "kamba_kim"
	}
	else if(authorID == "314239740511518730"){ //brad
		ttvUserName = "bradgodfrey"
	}
	else if(authorID == "183375111032799243"){ //alvin
		receivedMessage.channel.send("Who is going to watch you")
		validID = false
	}
	else{
		receivedMessage.channel.send("Account not Registered")
		validID = false
	}
	if(validID){
		receivedMessage.channel.send("https://www.twitch.tv/" + ttvUserName)
	}
}
function cancerfyChatCommand(arguments, receivedMessage){
	var msg = "";
	arguments.forEach((value) =>{
		msg = msg + value + " "
	})
	msg = msg.substring(0, msg.length - 1)
	var i;
	var returnMsg = "";
	for(i = 0; i < msg.length; i++){
		if(msg.charAt(i) != " "){
			if(Math.floor(Math.random() * 2) == 0){
				returnMsg = returnMsg + msg.charAt(i).toLowerCase();
			}
			else{
				returnMsg = returnMsg + msg.charAt(i).toUpperCase();
			}
				
		}
		else{
			returnMsg = returnMsg + " ";
		}
	}
	returnMsg = returnMsg.substring(0, returnMsg.length)
	receivedMessage.channel.send(returnMsg);
}
function allOpggCommand(arguments, receivedMessage){
	var name = arguments[0]
	if(name == "Herson" || name == "Joe" || name == "Joseph" || name == "joe" || name == "herson" || name == "joseph"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=herson%2Cscaredypoop")
	}
	else if(name == "flexq"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=lifeingrey%2Cnightstealth%2Ckamba%2Cbloxipus%2Cmire")
	}
	else if(name == "mic" || name == "mike" || name == "Mic" || name == "midget" || name == "Mike"){
		receivedMessage.channel.send("https://na.op.gg/multi/query=eastcoastcarry%2Cicansavethem%2Ctokyotraphouse%2Cdemonsxd")
	}
	else{
		receivedMessage.channel.send("Invalid Input")
	}
}

function champggCommand(arguments, receivedMessage){
	var championName = arguments[0];
	var role = arguments[1];
	if(arguments.length == 1){
		receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics")
	}
	else if(role == "top"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/top")
		}
		else if(role == "jg" || role == "jungle" || role == "jung"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/jungle")
		}
		else if(role == "mid" || role == "middle"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/mid")
		}
		else if(role == "adc" || role == "ad" || role == "bot" || role == "bottom"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/bot")
		}
		else if(role == "supp" || role == "sup" || role == "support"){
			receivedMessage.channel.send("https://na.op.gg/champion/" + championName + "/statistics/support")
		}
		else{
			receivedMessage.channel.send("Incorrect Input: !champ [champion name] [position/role]")
		}
}

function displayArgumentsCommand(arugments, receivedMessage){
	//receivedMessage.channel.send()
}

function opggCommand(arguments, receivedMessage){
	if(arguments.length > 1){
		var msg = "https://na.op.gg/multi/query=";
		arguments.forEach((value) =>{
			if(value == "brad"){
				msg = msg + "braddddddd" + "%2C"
			}
			else{
				msg = msg + value + "%2C"
			}
		})
		msg = msg.substring(0, msg.length - 3)
		receivedMessage.channel.send(msg)
	}
	else{
		if(arguments[0] == "brad"){
			receivedMessage.channel.send("https://na.op.gg/summoner/userName=braddddddd")
		}
		else{
			receivedMessage.channel.send("https://na.op.gg/summoner/userName=" + arguments[0])
		}
	}
}

function opggCommand2(arguments, receivedMessage){
	if(arguments.length > 1){
		var msg = "https://na.op.gg/multi/query=";
		arguments.forEach((value) =>{
			msg = msg + value + "%2C"
		})
		msg = msg.substring(0, msg.length - 3)
		receivedMessage.channel.send(msg)
	}
	else{
		arguments.forEach((value) =>{
		receivedMessage.channel.send("https://na.op.gg/summoner/userName=" + value)
	})
	}
	//receivedMessage.channel.send("https://na.op.gg/summoner/userName=" + receivedMessage.author.username)
}

function chinesetianSquareCommand(arguments, receivedMessage){
	receivedMessage.channel.send("@chinese 动态网自由门 天安門 天安门 法輪功 李洪志 Free Tibet 六四天安門事件 The Tiananmen Square protests of 1989 " +
			"天安門大屠殺 The Tiananmen Square Massacre 反右派鬥爭 The Anti-Rightist Struggle 大躍進政策 The Great Leap Forward " +
			"文化大革命 The Great Proletarian Cultural Revolution 人權 Human Rights 民運 Democratization 自由 Freedom 獨立 Independence " +
			"多黨制 Multi-party system 台灣 臺灣 Taiwan Formosa 中華民國 Republic of China 西藏 土伯特 唐古特 Tibet 達賴喇嘛 Dalai Lama 法輪功 " +
			"Falun Dafa 新疆維吾爾自治區 The Xinjiang Uyghur Autonomous Region 諾貝爾和平獎 Nobel Peace Prize 劉暁波 Liu Xiaobo 民主 言論 " +
			"思想 反共 反革命 抗議 運動 騷亂 暴亂 騷擾 擾亂 抗暴 平反 維權 示威游行 李洪志 法輪大法 大法弟子 強制斷種 強制堕胎 民族淨化 人體實驗 肅清 胡耀邦 趙紫陽 " +
			"魏京生 王丹 還政於民 和平演變 激流中國 北京之春 大紀元時報 九評論共産黨 獨裁 專制 壓制 統一 監視 鎮壓 迫害 侵略 掠奪 破壞 拷問 屠殺 活摘器官 誘拐 買賣" +
			"人口 遊進 走私 毒品 賣淫 春畫 賭博 六合彩 天安門 天安门 法輪功 李洪志 Winnie the Pooh 劉曉波动态网自由门")
}
function tianSquareCommand(arguments, receivedMessage){
	receivedMessage.channel.send("动态网自由门 天安門 天安门 法輪功 李洪志 Free Tibet 六四天安門事件 The Tiananmen Square protests of 1989 " +
			"天安門大屠殺 The Tiananmen Square Massacre 反右派鬥爭 The Anti-Rightist Struggle 大躍進政策 The Great Leap Forward " +
			"文化大革命 The Great Proletarian Cultural Revolution 人權 Human Rights 民運 Democratization 自由 Freedom 獨立 Independence " +
			"多黨制 Multi-party system 台灣 臺灣 Taiwan Formosa 中華民國 Republic of China 西藏 土伯特 唐古特 Tibet 達賴喇嘛 Dalai Lama 法輪功 " +
			"Falun Dafa 新疆維吾爾自治區 The Xinjiang Uyghur Autonomous Region 諾貝爾和平獎 Nobel Peace Prize 劉暁波 Liu Xiaobo 民主 言論 " +
			"思想 反共 反革命 抗議 運動 騷亂 暴亂 騷擾 擾亂 抗暴 平反 維權 示威游行 李洪志 法輪大法 大法弟子 強制斷種 強制堕胎 民族淨化 人體實驗 肅清 胡耀邦 趙紫陽 " +
			"魏京生 王丹 還政於民 和平演變 激流中國 北京之春 大紀元時報 九評論共産黨 獨裁 專制 壓制 統一 監視 鎮壓 迫害 侵略 掠奪 破壞 拷問 屠殺 活摘器官 誘拐 買賣" +
			"人口 遊進 走私 毒品 賣淫 春畫 賭博 六合彩 天安門 天安门 法輪功 李洪志 Winnie the Pooh 劉曉波动态网自由门")
}

function helpCommand(arguments, receivedMessage) {
    receivedMessage.channel.send("!tiansquare")
}

client.login("NTY2MzUxMjE1MjgyMzU2MjI0.XLD0NA.SYdI90PjqQI_1rKt1pRK3EOPtL0")